apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: pod-resources-enforcer
  labels:
    app: pod-resources-enforcer
webhooks:
    # the name of the webhook has to be a fqdn with at least two dots (x.y.z), but can by any fqdn
  - name: resources-enforcement.microsoft.com
    clientConfig:
      # the service to call for the webhook
      service:
        name: pod-resources-enforcer
        namespace: restricted
        path: "/pods"
      # the CA certificate should be provided so the apiserver can trust the TLS certificate of the webhook server. 
      # Because weâ€™ve signed our certificates with the Kubernetes API, we can use the CA cert from our kubeconfig -
      # kubectl config view --raw -o json | jq -r '.clusters[0].cluster."certificate-authority-data"' 
      # or get it from the cluster by calling - 
      # kubectl get configmap -n kube-system extension-apiserver-authentication -o=jsonpath='{.data.client-ca-file}' | base64 | tr -d '\n'
      caBundle: <PUT YOUR CA BUNDLE BASE64>
    rules:
      - operations: ["CREATE"]
        apiGroups: ["apps", ""]
        apiVersions: ["v1"]
        resources: ["pods", "deployments"]
    namespaceSelector:
      matchLabels:
        # only apply to namespaces that have this label
        resources-enforcement: enabled